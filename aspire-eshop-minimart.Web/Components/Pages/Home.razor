@page "/"
@using aspire_eshop_minimart.Web
@using aspire_eshop_minimart.Web.Services
@inject ProductApiClient ProductClient
@inject CategoryApiClient CategoryClient
@inject CartService CartService
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>Home - Aspire eShop Minimart</PageTitle>

<!-- Hero Section -->
<div class="hero-section bg-primary text-white p-5 mb-5 rounded">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-lg-6">
                <h1 class="display-4 fw-bold">eShop Minimart</h1>
                <p class="lead">Your one-stop shop for fresh groceries and everyday essentials</p>
                <a href="/products" class="btn btn-light btn-lg">Shop Now</a>
            </div>
            <div class="col-lg-6 text-center">
                <i class="bi bi-shop" style="font-size: 8rem;"></i>
            </div>
        </div>
    </div>
</div>

<!-- Categories Section -->
<div class="container mb-5">
    <h2 class="text-center mb-4">Shop by Category</h2>
    @if (categories == null)
    {
        <div class="text-center">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else
    {
        <div class="row">
            @foreach (var category in categories)
            {
                <div class="col-md-2 col-sm-4 col-6 mb-3">
                    <div class="card h-100 category-card" @onclick="() => NavigateToCategory(category.Id)" style="cursor: pointer;">
                        <img src="@category.ImageUrl" class="card-img-top" alt="@category.Name" style="height: 120px; object-fit: cover;">
                        <div class="card-body text-center p-2">
                            <h6 class="card-title mb-0">@category.Name</h6>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

<!-- Featured Products Section -->
<div class="container mb-5">
    <h2 class="text-center mb-4">Featured Products</h2>
    @if (featuredProducts == null)
    {
        <div class="text-center">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else if (!featuredProducts.Any())
    {
        <p class="text-center text-muted">No featured products available.</p>
    }
    else
    {
        <div class="row">
            @foreach (var product in featuredProducts)
            {
                <div class="col-lg-3 col-md-4 col-sm-6 mb-4">
                    <div class="card h-100 product-card">
                        <img src="@product.ImageUrl" class="card-img-top" alt="@product.Name" style="height: 200px; object-fit: cover;">
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">@product.Name</h5>
                            <p class="card-text text-muted small">@product.Description</p>
                            <div class="mt-auto">
                                <div class="d-flex justify-content-between align-items-center mb-2">
                                    <span class="h5 text-primary mb-0">$@product.Price.ToString("F2")</span>
                                    <small class="text-muted">Stock: @product.StockQuantity</small>
                                </div>
                                <button class="btn btn-primary btn-sm w-100" @onclick="() => AddToCart(product.Id)" disabled="@(product.StockQuantity == 0)">
                                    @if (product.StockQuantity == 0)
                                    {
                                        <span>Out of Stock</span>
                                    }
                                    else
                                    {
                                        <i class="bi bi-cart-plus me-1"></i>
                                        <span>Add to Cart</span>
                                    }
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

<style>
    .hero-section {
        background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);
    }

    .category-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        transition: all 0.3s ease;
    }

    .product-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        transition: all 0.3s ease;
    }
</style>

@code {
    private Category[]? categories;
    private Product[]? featuredProducts;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Load categories and featured products in parallel
            var categoriesTask = CategoryClient.GetCategoriesAsync();
            var featuredProductsTask = ProductClient.GetFeaturedProductsAsync();

            await Task.WhenAll(categoriesTask, featuredProductsTask);

            categories = await categoriesTask;
            featuredProducts = await featuredProductsTask;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading home page data: {ex.Message}");
            categories = [];
            featuredProducts = [];
        }
    }

    private void NavigateToCategory(int categoryId)
    {
        Navigation.NavigateTo($"/products?category={categoryId}");
    }

    private async Task AddToCart(int productId)
    {
        try
        {
            await CartService.AddToCartAsync(productId, 1);
            // You could add a toast notification here
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error adding to cart: {ex.Message}");
            // You could show an error message to the user
        }
    }
}
